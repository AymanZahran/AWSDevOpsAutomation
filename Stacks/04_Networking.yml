Parameters:
  VPCCidr:
    Description: VPC Cidr
    Type: String
    Default: "10.0.0.0/16"
  PublicSubnet1Cidr:
    Description: Public Subnet 1 Cidr
    Type: String
    Default: "10.0.0.0/24"
  PublicSubnet2Cidr:
    Description: Public Subnet 2 Cidr
    Type: String
    Default: "10.0.1.0/24"
  PublicSubnet3Cidr:
    Description: Public Subnet 3 Cidr
    Type: String
    Default: "10.0.2.0/24"
  PrivateSubnet1Cidr:
    Description: Private Subnet 1 Cidr
    Type: String
    Default: "10.0.10.0/24"
  PrivateSubnet2Cidr:
    Description: Private Subnet 2 Cidr
    Type: String
    Default: "10.0.11.0/24"
  PrivateSubnet3Cidr:
    Description: Private Subnet 3 Cidr
    Type: String
    Default: "10.0.12.0/24"
  DBSubnet1Cidr:
    Description: Database Subnet 1 Cidr
    Type: String
    Default: "10.0.20.0/24"
  DBSubnet2Cidr:
    Description: Database Subnet 2 Cidr
    Type: String
    Default: "10.0.21.0/24"
  DBSubnet3Cidr:
    Description: Database Subnet 3 Cidr
    Type: String
    Default: "10.0.22.0/24"

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsHostnames: True
      EnableDnsSupport: True
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: VPC

  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: IGW
  VPCGatewayAttachmentment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ]
      CidrBlock: !Ref PublicSubnet1Cidr
      MapPublicIpOnLaunch: True
      Tags:
        - Key: Name
          Value: PublicSubnet1
      VpcId: !Ref VPC
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ]
      CidrBlock: !Ref PublicSubnet2Cidr
      MapPublicIpOnLaunch: True
      Tags:
        - Key: Name
          Value: PublicSubnet2
      VpcId: !Ref VPC
  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [2, !GetAZs ]
      CidrBlock: !Ref PublicSubnet3Cidr
      MapPublicIpOnLaunch: True
      Tags:
        - Key: Name
          Value: PublicSubnet3
      VpcId: !Ref VPC

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ]
      CidrBlock: !Ref PrivateSubnet1Cidr
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value: PrivateSubnet1
      VpcId: !Ref VPC
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ]
      CidrBlock: !Ref PrivateSubnet2Cidr
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value: PrivateSubnet2
      VpcId: !Ref VPC
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [2, !GetAZs ]
      CidrBlock: !Ref PrivateSubnet3Cidr
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value: PrivateSubnet3
      VpcId: !Ref VPC

  DBSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ]
      CidrBlock: !Ref DBSubnet1Cidr
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value: DBSubnet1
      VpcId: !Ref VPC
  DBSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ]
      CidrBlock: !Ref DBSubnet2Cidr
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value: DBSubnet2
      VpcId: !Ref VPC
  DBSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [2, !GetAZs ]
      CidrBlock: !Ref DBSubnet3Cidr
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value: DBSubnet3
      VpcId: !Ref VPC

  # EIP1:
  #   Type: AWS::EC2::EIP
  #   Properties:
  #     Domain: VPC
  #     Tags:
  #       - Key: Name
  #         Value: EIP1
  #   DependsOn:
  #     - VPCGatewayAttachmentment
  # EIP2:
  #   Type: AWS::EC2::EIP
  #   Properties:
  #     Domain: VPC
  #     Tags:
  #       - Key: Name
  #         Value: EIP2
  #   DependsOn:
  #     - VPCGatewayAttachmentment
  # EIP3:
  #   Type: AWS::EC2::EIP
  #   Properties:
  #     Domain: VPC
  #     Tags:
  #       - Key: Name
  #         Value: EIP3
  #   DependsOn:
  #     - VPCGatewayAttachmentment

  # NAT1:
  #   Type: AWS::EC2::NatGateway
  #   Properties:
  #     AllocationId: !GetAtt EIP1.AllocationId
  #     SubnetId: !Ref PublicSubnet1
  #     Tags:
  #       - Key: Name
  #         Value: NAT1
  # NAT2:
  #   Type: AWS::EC2::NatGateway
  #   Properties:
  #     AllocationId: !GetAtt EIP2.AllocationId
  #     SubnetId: !Ref PublicSubnet2
  #     Tags:
  #       - Key: Name
  #         Value: NAT2
  # NAT3:
  #   Type: AWS::EC2::NatGateway
  #   Properties:
  #     AllocationId: !GetAtt EIP3.AllocationId
  #     SubnetId: !Ref PublicSubnet3
  #     Tags:
  #       - Key: Name
  #         Value: NAT3

  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: RouteTablePublic

  RouteTablePrivate1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: RouteTablePrivate1
  RouteTablePrivate2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: RouteTablePrivate2
  RouteTablePrivate3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: RouteTablePrivate3

  RouteIGW:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref IGW
      RouteTableId: !Ref RouteTablePublic
    DependsOn:
      - IGW
      - RouteTablePublic

  # RouteNAT1:
  #   Type: AWS::EC2::Route
  #   Properties:
  #     DestinationCidrBlock: "0.0.0.0/0"
  #     NatGatewayId: !Ref NAT1
  #     RouteTableId: !Ref RouteTablePrivate1
  #   DependsOn:
  #     - NAT1
  #     - RouteTablePrivate1
  # RouteNAT2:
  #   Type: AWS::EC2::Route
  #   Properties:
  #     DestinationCidrBlock: "0.0.0.0/0"
  #     NatGatewayId: !Ref NAT2
  #     RouteTableId: !Ref RouteTablePrivate2
  #   DependsOn:
  #     - NAT2
  #     - RouteTablePrivate2
  # RouteNAT3:
  #   Type: AWS::EC2::Route
  #   Properties:
  #     DestinationCidrBlock: "0.0.0.0/0"
  #     NatGatewayId: !Ref NAT3
  #     RouteTableId: !Ref RouteTablePrivate3
  #   DependsOn:
  #     - NAT3
  #     - RouteTablePrivate3

  RouteTableAssociationPublicSubnet1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref RouteTablePublic
  RouteTableAssociationPublicSubnet2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref RouteTablePublic
  RouteTableAssociationPublicSubnet3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet3
      RouteTableId: !Ref RouteTablePublic
  RouteTableAssociationPrivateSubnet1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref RouteTablePrivate1
  RouteTableAssociationPrivateSubnet2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref RouteTablePrivate2
  RouteTableAssociationPrivateSubnet3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet3
      RouteTableId: !Ref RouteTablePrivate3

  EndpointS3:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: "*"
            Action:
              - "s3:GetObject"
            Resource:
              - "arn:aws:s3:::*/*"
      RouteTableIds:
        - !Ref RouteTablePrivate1
        - !Ref RouteTablePrivate2
        - !Ref RouteTablePrivate3
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.s3"
      VpcId: !Ref VPC

  EndpointDynamoDB:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: "*"
            Action:
              - "dynamodb"
            Resource:
              - "arn:aws:dynamodb:::*/*"
      RouteTableIds:
        - !Ref RouteTablePrivate1
        - !Ref RouteTablePrivate2
        - !Ref RouteTablePrivate3
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.dynamodb"
      VpcId: !Ref VPC

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC
    Export:
      Name: VPC

  PublicSubnet1:
    Description: A reference to the Public Subnet 1
    Value: !Ref PublicSubnet1
    Export:
      Name: PublicSubnet1
  PublicSubnet2:
    Description: A reference to the Public Subnet 2
    Value: !Ref PublicSubnet2
    Export:
      Name: PublicSubnet2
  PublicSubnet3:
    Description: A reference to the Public Subnet 3
    Value: !Ref PublicSubnet3
    Export:
      Name: PublicSubnet3

  PrivateSubnet1:
    Description: A reference to the Private Subnet 1
    Value: !Ref PrivateSubnet1
    Export:
      Name: PrivateSubnet1
  PrivateSubnet2:
    Description: A reference to the Private Subnet 2
    Value: !Ref PrivateSubnet2
    Export:
      Name: PrivateSubnet2
  PrivateSubnet3:
    Description: A reference to the Private Subnet 3
    Value: !Ref PrivateSubnet3
    Export:
      Name: PrivateSubnet3

  DBSubnet1:
    Description: A reference to the Database Subnet 1
    Value: !Ref DBSubnet1
    Export:
      Name: DBSubnet1
  DBSubnet2:
    Description: A reference to the Database Subnet 2
    Value: !Ref DBSubnet2
    Export:
      Name: DBSubnet2
  DBSubnet3:
    Description: A reference to the Database Subnet 3
    Value: !Ref DBSubnet3
    Export:
      Name: DBSubnet3

  RouteTablePrivate1:
    Description: A reference to the Private Route Table in Subnet1
    Value: !Ref RouteTablePrivate1
    Export:
      Name: RouteTablePrivate1

  RouteTablePrivate2:
    Description: A reference to the Private Route Table in Subnet2
    Value: !Ref RouteTablePrivate2
    Export:
      Name: RouteTablePrivate2

  RouteTablePrivate3:
    Description: A reference to the Private Route Table in Subnet3
    Value: !Ref RouteTablePrivate3
    Export:
      Name: RouteTablePrivate3

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2, !Ref PublicSubnet3 ]]
  PrivateSubnets:
    Description: A list of the private subnets
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2, !Ref PrivateSubnet3 ]]
