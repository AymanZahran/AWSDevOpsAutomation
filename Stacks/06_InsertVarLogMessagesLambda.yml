Parameters:
  FunctionName:
    Description: Detect Drifted Stacks Lambda Function Name
    Type: String
    Default: "InsertVarLogMessagesLambda"
  
Resources:
  InsertVarLogMessagesLambda:
    Type: AWS::Lambda::Function
    Properties: 
      Architectures: 
        - x86_64
      Code: 
        ZipFile: |
          import json
          import urllib
          import boto3

          import random
          import string
          import uuid

          s3 = boto3.client('s3')
          dynamo_db = boto3.resource('dynamodb')
          dynamoTable = dynamo_db.Table('table_name')

          def lambda_handler(event, context):
              bucket = event['Records'][0]['s3']['bucket']['name']
              key = event['Records'][0]['s3']['object']['key'].encode('utf8')
              try:
                  file_obj = event["Records"][0]
                  filename = str(file_obj['s3']['object']['key'])
                  
                  fileObj = s3.get_object(Bucket='bucket_name', Key=filename)
                  file_content = fileObj["Body"].read().decode("utf-8")
                  
                  file_json = json.loads(file_content)
 
                  dynamoTable.put_item(Item = {
                      'id': uuid.uuid4(),
                      'timestamp': file_json['timestamp'],
                      'hostname': file_json['hostname'],
                      'program': file_json['program'],
                      'processid': file_json['processid'],
                      'message': file_json['message']
                  })
                  
                  return "Lambda Working"
              except Exception as e:
                  print(e)
                  print('Error getting object {} from bucket {}. Make sure they exist and your bucket is in the same region as this function.'.format(key, bucket))
                  raise e

      Description: "Insert VarLogMessages Lambda Function"
      FunctionName: !Ref FunctionName
      Handler: index.handler
      PackageType: Zip
      Timeout: 300
      Environment:
        Variables: 
          bucket_name: !ImportValue VarLogMessagesBucketName
          table_name: !ImportValue VarLogMessagesTableName
      Role: !ImportValue InsertVarLogMessagesLambdaRole
      Runtime: python3.9
  
Outputs:
  InsertVarLogMessagesLambda:
    Description: A reference to the Insert VarLogMessages Lambda
    Value: !GetAtt InsertVarLogMessagesLambda.Arn
    Export:
      Name: InsertVarLogMessagesLambda